
# Connect to terminal
ssh -i key hacker@dojo.pwn.college


# embryoio Module 1
# 1
/challenge/embryoio_level 1
pwn.college{YPR1NIHMqsBmvFuemjYxk5_w_nE.0VMscTOxUzW}

# 2
/challenge/embryoio_level2
pswd = ozwivqiv
pwn.college{wy_iLaiv9B_84crGaEwqIwQ4Dsu.0lMscTOxUzW}

# 3
/challenge/embryoio_level3 whmpwzgkhn
pwn.college{g3HSoaGhNvU6oEI8z7amkiF28Iy.01MscTOxUzW}

# 4
vwucgd=fgzjspoeuj /embryoio_level4
pwn.college{QPGDw9jgCbneN9oRhEF4A4zM6HI.0FNscTOxUzW}

# 5
nano /tmp/mlvbgd
ouyqqxmk

/challenge/embryoio_level5 < /tmp/mlvbgd
pwn.college{wQaDffCYBH-sJYDPe3YIBI15XfU.0VNscTOxUzW}

# 6 
/challenge/embryoio_level6 > /tmp/xmdvkq
cat /tmp/xmdvkq
pwn.college{EmFX92lyaGy5Aw_bs8a3RZUK-Oz.0lNscTOxUzW}

# 7
env -i /challenge/embryoio_level7
pwn.college{YThUXsEVFOoO_Ty3dwtbz18jKIs.01NscTOxUzW}

# 8
nano flag8script.sh
*inside
#!/bin/bash
/challenge/embryoio_level8

bash flag8script.sh
pwn.college{AVPtCPnBTeWNB3y0BkJvHoJ2Y1r.0FOscTOxUzW}

# 9
nano flag9script.sh
*inside
#!/bin/bash
/challenge/embryoio_level9

bash flag9script.sh
mfbozprl
pwn.college{8wYbTvllabpKk0BryGvmb-5_0Ps.0VOscTOxUzW}

#10
dhmhedlran
nano flag10script.sh
*inside
#!/bin/bash
/challenge/embryoio_level10 dhmhedlran

bash flag9script.sh
pwn.college{ksKo9Loj7Kvrr0dG0oJjxvYuRyB.dBTMscTOxUzW}

# 11 
#!/bin/bash
mhgott=kqfmoczozh /challenge/embryoio*      

bash flag11bash.sh
pwn.college{sbzu6PrEv5SjEyyp8i5fgvow4EB.dFTMscTOxUzW}


# 12
nano flag12script.sh
#in file
#!/bin/bash
/challenge/embryoio_level12 < /tmp/nwunqw

nano /tmp/nwunqw
#infile
tayqexwx

#run 
bash flag12script.sh
pwn.college{4B-q_d4jD5Rg2z5Hlo9_VZ0Wc7v.dJTMscTOxUzW}

# 13
nano flag13script.sh
#in file
#!/bin/bash
/challenge/embryoio_level13 < /tmp/hpgjix

#run 
bash flag12script.sh
cat /tmp/hpgjix
pwn.college{AcDmpYizbk4pn9OmhAVwiFuP589.dNTMscTOxUzW}

#14
nano flag14script.sh
#!/bin/bash
env -i /challenge/embryoio_level14
pwn.college{AuEF_vdJWQdV0BWohGO2jy5qZI_.dRTMscTOxUzW}

#skips to 22
nano flag22script.py

#python file
import subprocess
out = subprocess.run("/challenge/embryoio_level22")
print(out)

python3 flag22script.py
pwn.college{s7qGT_G2ZZ8br84YzxXo2U1nF8u.dJjMscTOxUzW}

# 23
nano flag23script.py

#python file
import subprocess
out = subprocess.run("/challenge/embryoio_level23")
print(out)

python3 flag23script.py
dhnmehms

pwn.college{wMzPM6yBNbcwoTPfbL5IFtimQZu.dNjMscTOxUzW}

# 24 
#flag24script.py
import subprocess
import pwn
import glob
p = pwn.process(glob.glob("/challenge/embry*") + [ "vmvbecwlsj" ], stdout=pwn.PIPE, stdin=pwn.PIPE)
print(p.read().decode())
#out = subprocess.run("/challenge/embryoio_level24", "vmvbecwlsj")

python3 flag24script.py 
pwn.college{cxNngFQGI_0NXbNhNuafyXZuErI.dRjMscTOxUzW}

# 25
set env = cmlpvp:xzdikcxqtl

#flag25script.py
import os
import subprocess
os.environ["cmlpvp"] = "xzdikcxqtl"

out = subprocess.run("/challenge/embryoio_level25")
print(out)
#other python file
import pwn
import glob
p = pwn.process(glob.glob("/challenge/emb*"), env={"ENVNAME : VALUE"})
print(p.read().decode())
python3 flag25script.py

pwn.college{o6QCW0r4-eZiHn-qE-l3p5qAc5S.dVjMscTOxUzW}

# 26 
nano /tmp/ylqtru
yvbpcapq

#flag26script.py
import os
import sys
import subprocess 
from subprocess import Popen, PIPE, STDOUT
import pwn
import glob

from pwn import *
import os
p = process("/challenge/embryoio_level26", stdin=os.open("/tmp/ylqtru", os.O_RDWR))
p.interactive()

pwn.college{gGH3ik2p7LkynZk-xNIkrWxwYEA.dZjMscTOxUzW}


from pwn import *
import os
p = process("/challenge/embryoio_level26", stdin=os.open("/tmp/wtybrt, os.O_RDWR"))
p.interactive()


#to try
import glob
import pwn
p = pwn.process(glob.glob("/challenge/embryoio*"), stdout=pwn.PIPE stdin=pwn.PIPE)
p.sendline("yvbpcapq")
print(p.read().decode())
python3 flag26script.py > /tmp/ylqtru < yvbpcapq



# 27 redirect to /tmp/nxmhkh
#flag27script.py
import os
import subprocess
#os.environ["cmlpvp"] = "xzdikcxqtl"

out = subprocess.run("/challenge/embryoio_level27")
print(out)

python3 flag27script.py > /tmp/nxmhkh

pwn.college{EPbBr7fQaBkwY7uiLwNl_SwCd4u.ddjMscTOxUzW}

# 28 empty enviroment in python3
#flag28script.py
import os
import subprocess
del os.environ

out = subprocess.run("/challenge/embryoio_level28")
print(out)

exec -c python3 flag28script.py 
pwn.college{8geNToEPLNl6HXqrXa604QDvaSE.dhjMscTOxUzW}

# 29
#cfile
#include <unistd.h>
#include <sys/wait.h>

int pwncollege()
{
}

int main(int argc, char **argv)
{

	int i = fork();
	if(i == 0)
	{
		execve("/challenge/embryoio_level29", NULL, NULL);
	}
	else
	{
		waitpid(i, NULL, 0);
	}
}

#run 
gcc -o flag29 flag29.c 
./flag29
pwn.college{cerMCOSxRy1DMneKoREuf7pcTP-D.dljMscTOxUzW}

# 30
#c file
int pwncollege()
{
}

int main(int argc, char **argv)
{

	int i = fork();
	if(i == 0)
	{
		execve("/challenge/embryoio_level30", NULL, NULL);
	}
	else
	{
		waitpid(i, NULL, 0);
	}
}

pwn.college{YmoJaj70WOK0gfsBXr4R65bOrnq.dBzMscTOxUzW}

# 31
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <stddef.h>
int pwncollege()
{
}

int main(int argc, char **argv)
{



	char *pathname = "/tmp/my_file";
        int my_file_fd = open(pathname, O_RDONLY);

        printf("my_file fd: %d\n", my_file_fd);

        int my_duped_fd = 0;
        dup2(my_file_fd, 177);

        printf("my_duped_fd %d\n", my_duped_fd);
        pid_t pid = fork();
        if(pid == 0)
        {
                //in child
                //still running in our c program, want to run challenge

                //setting execve variables
                //char *pathname = "/challenge/embryoio_level120";
                char *newargv[] = {"/challenge/embryoio_level31", "bftcolmenv", NULL};
                char *newenvp[] = { NULL };
                //execute new binary
                execve("/challenge/embryoio_level31", newargv, newenvp);

        }
        else
        {
                int status = 0;
                //in parent
                waitpid(pid, &status, 0);
        }
        return 0;

/*	for (int j = 0; j < argc; j++)
	{
		printf("argv[%d]: %s\n", j, argv[j]);
	}


	FILE *fp;
	string c;
	fp = freopen("flag31argv", "r");
	while(1) {
	c = fgetc(fp);
	if(feof(fp) )
	{
		break;
	}
	execl("/challenge/embryoio_level31", c);
	fclose(fp);
	return 0;
	} */
/*	int i = fork();
	if(i == 0)
	{
		char *argv[1]= { "bftcolmenv" };
		//*argvv[0] = "bftcolmenv";
		execl("/challenge/embryoio_level31", "bftcolmenv", NULL);
		//execve("/challenge/embryoio_level31", argv[1], NULL);
	}
	else
	{
		waitpid(i, NULL, 0);
	}*/
//printf("%s", "hello world");
}
pwn.college{EEzF0HSE5H8YufOHbVmfFTULMx_.dFzMscTOxUzW}



# 32
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <stddef.h>
int pwncollege()
{
}

int main(int argc, char **argv)
{



	char *pathname = "/tmp/my_file";
        int my_file_fd = open(pathname, O_RDONLY);

        printf("my_file fd: %d\n", my_file_fd);

        int my_duped_fd = 0;
        dup2(my_file_fd, 177);

        printf("my_duped_fd %d\n", my_duped_fd);
        pid_t pid = fork();
        if(pid == 0)
        {
                //in child
                //still running in our c program, want to run challenge

                //setting execve variables
                //char *pathname = "/challenge/embryoio_level120";
                char *newargv[] = {"/challenge/embryoio_level32", 0};
                //char *nargv[] = {"/bin/sh" , "-c", "env", 0};
		char *newenvp[] = {"czvvhy=jvhqwanxzd", 0};
                //execute new binary
                execve("/challenge/embryoio_level32", &argv[0], newenvp);

        }
        else
        {
                int status = 0;
                //in parent
                waitpid(pid, &status, 0);
        }
        return 0;

/*	for (int j = 0; j < argc; j++)
	{
		printf("argv[%d]: %s\n", j, argv[j]);
	}


	FILE *fp;
	string c;
	fp = freopen("flag31argv", "r");
	while(1) {
	c = fgetc(fp);
	if(feof(fp) )
	{
		break;
	}
	execl("/challenge/embryoio_level31", c);
	fclose(fp);
	return 0;
	} */
/*	int i = fork();
	if(i == 0)
	{
		char *argv[1]= { "bftcolmenv" };
		//*argvv[0] = "bftcolmenv";
		execl("/challenge/embryoio_level31", "bftcolmenv", NULL);
		//execve("/challenge/embryoio_level31", argv[1], NULL);
	}
	else
	{
		waitpid(i, NULL, 0);
	}*/
//printf("%s", "hello world");
}
pwn.college{c9eH_0E_zrw0YUGwtrBeK60xd2F.dJzMscTOxUzW}


# 33 run with c program
#include <stddef.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <stdio.h>

void pwncollege()
{
        //do stuff
        int challenge_pid = fork();
        if (challenge_pid == 0)
        {
                //executing challenge
                char* argv[] = { NULL };
                char* envp[] = { NULL };
//                int pipein_fd = open("/home/hacker/pin", O_RDWR);
//              printf("fd: %d/n", pipein_fd);
		int fd = open("/tmp/ftsipf", O_RDWR);
		dup2(fd, STDIN_FILENO);
		//like doing 
		//challenge/embryoio)level33 < path
//                dupe2(pipein_fd, STDIN_FILENO);

                execve("/challenge/embryoio_level33", argv, envp);
        }
        else
        {
        //      dupe2(pipe_indf, STDIN_FILENO);
                waitpid(challenge_pid, NULL, 0);
        }

}

int main()
{
        pwncollege();

}
pwn.college{cm7FavoOMMRqDM1_2abfOy4NrAc.dNzMscTOxUzW}

# 34
#include <stddef.h>

void pwncollege()
{
        //do stuff
        int challenge_pid = fork();
        if (challenge_pid == 0)
        {
                //executing challenge
                char* argv[] = { "/flag ">", "/tmp/tfzgke", NULL };
                char* envp[] = { NULL };
                execve("/challenge/embryoio_level34", argv, envp);
        }
        else
        {
        waitpid(challenge_pid, NULL, 0);
        }

}

int main(int argc, char **argv, char **env)
{
        pwncollege();

}


pwn.college{sRxlkZJvCck-rEKCbWRhSAjKwN5.dRzMscTOxUzW}


# 35
#include <stddef.h>

void pwncollege()
{
        //do stuff
        int challenge_pid = fork();
        if (challenge_pid == 0)
        {
                //executing challenge
                char* argv[] = { NULL };
                char* envp[] = { NULL };
                execve("/challenge/embryoio_level35", argv, envp);
        }
        else
        {
        waitpid(challenge_pid, NULL, 0);
        }

}

int main()
{
        pwncollege();

}

# bash file
env -i ./a.out
pwn.college{8FqBeggwz7Rpdgm_4EU23G-juqT.dVzMscTOxUzW}

# 36 

/embryoio_level36 | cat
pwn.college{oBxABSiCWYep52EB3bxeBOwRjUW.dZzMscTOxUzW}


# 37
/challenge/embryoio_level37 | grep "pwn"
pwn.college{oG6qzJNjl1jXQa_ho-2Y8e2ZEZ8.ddzMscTOxUzW}



# 40 
cat | /challenge/embryoio_level40
khwlyvnr

pwn.college{I-JB28Nf-RxDgENnIb0Z0zE_pug.dBDNscTOxUzW}

#42
#bash file
#!/bin/bash
/challenge/$HOSTNAME | cat

bash flag42.sh
pwn.college{E_6DyJsCBTBe5xt-ErJdllw2DgK.dJDNscTOxUzW}

# 44
# bash 
#!/bin/bash

/challenge/$HOSTNAME | sed /challenge/$HOSTNAME

pwn.college{4UzK6qk3oyAMF2tnCWnGJZl-f2o.dRDNscTOxUzW}

# 47
#bash file
#!/bin/bash
rev | /challenge/embryoio_level47

bash flag47.sh
jykeviqt
ctrl + D
pwn.college{oMW-msjr08g4gUzTvXmsNQN3bar.ddDNscTOxUzW}



# 54
#python file
#python
import subprocess

print("start")
subprocess.call("/challenge/embryoio_level54")
print( "end")

python3 flag54.py | cat
pwn.college{gy-fpWoLwKl_z4T5qiYOXuqpkFN.dRTNscTOxUzW}

# 56
#python file
import subprocess

print("start")
subprocess.call("/challenge/embryoio_level56")
print( "end")

python3 flag56.py | sed /challenge/embryoio_level56
pwn.college{kJU8X8Vl8AbOziTTlGpWieU_A85.dZTNscTOxUzW}

# 58
#python file
import subprocess

print("start")
subprocess.call("/challenge/embryoio_level58")
print( "end")

cat | python3 flag58.py
pwn.college{Mmk6VH2eX2IN1hfFgKHo4G7J-0R.dhTNscTOxUzW}

# 60
#include <sys/wait.h>
#include <unistd.h>
#include <stddef.h>
#include <stdio.h>

int pwncollege()
{
}

int main(int argc, char **argv)
{
	int i = fork();
	if(i == 0)
	{
		int pipe_fds[2];
		pipe(pipe_fds);
		
		int j = fork();
		if(j != 0)
		{
			dup2(pipe_fds[1], 1);
			close(pipe_fds[0]);
			execve("/challenge/embryoio_level60", NULL, NULL);
		}
		else
		{
			dup2(pipe_fds[0], 0);
			close(pipe_fds[1]);
			execl("/usr/bin/cat", "/usr/bin/cat", NULL);
		}
	}
	else
	{
	waitpid(i, NULL, 0);
	}


}

./a.out
pwn.college{oqIi-pOVXFogXlcvDmM8V9kIiUU.dBjNscTOxUzW}

# 61 
# c file
#include <sys/wait.h>
#include <unistd.h>
#include <stddef.h>
#include <stdio.h>

int pwncollege()
{
}

int main(int argc, char **argv)
{
	int i = fork();
	if(i == 0)
	{
		int pipe_fds[2];
		pipe(pipe_fds);
		
		int j = fork();
		if(j != 0)
		{
			dup2(pipe_fds[1], 1);
			close(pipe_fds[0]);
			execve("/challenge/embryoio_level61", NULL, NULL);
		}
		else
		{
			dup2(pipe_fds[0], 0);
			close(pipe_fds[1]);
			execl("/usr/bin/grep", "/usr/bin/grep", "pwn", NULL);
		}
	}
	else
	{
	waitpid(i, NULL, 0);
	}

}

gcc flag61.c
./a.out
pwn.college{kIbh9GODTwr5o0izwMiaUHErFwO.dFjNscTOxUzW}

# 65
#include <sys/wait.h>
#include <unistd.h>
#include <stddef.h>
#include <stdio.h>

int pwncollege()
{
}

int main(int argc, char **argv)
{
	int i = fork();
	if(i == 0)
	{
		int pipe_fds[2];
		pipe(pipe_fds);
		
		int j = fork();
		if(j != 0)
		{	
			dup2(pipe_fds[1], 1);
			close(pipe_fds[0]);
			execve("/challenge/embryoio_level65", NULL, NULL);
			
		}
		else
		{
			dup2(pipe_fds[0], 0);
			close(pipe_fds[1]);
			execl("/usr/bin/rev", "/usr/bin/rev", NULL);
		}
	}
	else
	{
	waitpid(i, NULL, 0);
	}

}

gcc flag65.c
rev | ./a.out
wwwejfen
pwn.college{0ogSb5yWToZD59I057KVjRheFjW.dVjNscTOxUzW}

# 66 
find /challenge -type f -executable -name embryoio_level66 -exec /challenge/embryoio_level66 -c {} \
pwn.college{oXIuslE-hUvFXkr33en3AdFnoA5.dZjNscTOxUzW}


# 68
#bash file
/challenge/$HOSTNAME hello1 hello2 hello3 hello4 hello5 hello6 hello7 hello8 hello9 hello10 hello11 hello12 hello13 hello14 hello15 hello16 hello17 hello18 hello19 hello20 hello21 hello22 hello23 hello24 hello25 hello26 hello27 hello28 hello29 hello30 hello31 hello32 hello33 hello34 hello35 hello36 hello37 hello38 hello39 hello40 hello41 hello42 hello43 hello44 hello45 hello46 hello47 hello48 hello49 hello50 hello51 hello52 hello53 hello54 hello55 hello56 hello57 hello58 hello59 hello60 hello61 hello62 hello63 hello64 hello65 hello66 hello67 hello68 hello69 hello70 hello71 hello72 hello73 hello74 hello75 hello76 hello77 hello78 hello79 hello80 hello81 hello82 hello83 hello84 hello85 hello86 hello87 hello88 hello89 hello90 hello91 hello92 hello93 hello94 hello95 hello96 hello97 hello98 hello99 hello100 hello101 hello102 hello103 hello104 hello105 hello106 hello107 hello108 hello109 hello110 hello111 hello112 hello113 hello114 hello115 hello116 hello117 hello118 hello119 hello120 hello121 hello122 hello123 hello124 hello125 hello126 hello127 hello128 hello129 hello130 hello131 hello132 hello133 iwgaidlyai

bash flag68.sh
pwn.college{0_NpW5w1ZREDCSUiVpuk927nm5S.dhjNscTOxUzW}


# 69
#C file
#include <unistd.h>

void pwncollege() { }

int main()
{
	execve("/challenge/embryoio_level69", 0, 0);


}

# run ./a.out

#bash script
#!/bin/bash

./a.out
pwn.college{End1fu1rH-LYImb1Sj0gK-ia21A.dljNscTOxUzW}


# 71
- the challenge will check that argv[NUM] holds value VALUE (listed to the right as NUM:VALUE) : 251:epagcfhnvp
- the challenge will check that env[KEY] holds value VALUE (listed to the right as KEY:VALUE) : 148:rhhkanwkyx
env -i /challenge/embryoio_level14


# 72 /challenge/$HOSTNAME < /tmp/test > /tmp/test2
#!/bin/bash

mkdir /tmp/trebbk
cd /tmp/trebbk
touch rcztdf

/challenge/$HOSTNAME < rcztdf
pwn.college{YLM4znX11bj-NX8o7QRdS_1-Z-4.dJzNscTOxUzW}

# 73
#bash file
#!/bin/bash

mkdir /tmp/gjjuyu
cd /tmp/gjjuyu

/challenge/$HOSTNAME &

cd /
sleep 1
pwn.college{EavOVu3gvgAkBdeRjAe3oZo0Bfm.dNzNscTOxUzW}

# Alternate bash file
#!/bin/bash

mkdir /tmp/gjjuyu
cd /tmp/gjjuyu

#creates subshell
bash -c 'cd /tmp/gjjuyu; exec /challenge/$HOSTNAME'

$ 74 
#python file
import os
from pwn import *
import subprocess
import sys

p = process(['/challenge/embryoio_level74', 'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'hello',  'ftjcldjdsp'])
print(p.recvall(timeout=2).decode('utf-8'))

pwn.college{EYPW0v6SBD070MSKRcSfaeB1Lek.dRzNscTOxUzW}


# 75
#python
import subprocess

print("start")
subprocess.call("./a.out")
print( "end")

#c file
import subprocess

print("start")
subprocess.call("./a.out")
print( "end")
hacker@embryoio_level75:~$ cat flag75.c
#include <sys/wait.h>
#include <unistd.h>
#include <stddef.h>
#include <stdio.h>
int main(int argc, char **argv)
{

execve("/challenge/embryoio_level75", NULL, NULL);
}
pwn.college{sO_z2t_LCHIZzlNb8du-8tSwHXJ.dVzNscTOxUzW}

# 77 
#python file
from pwn import *
import os

del os.environ['PWNLIB_NOTERM']
print(os.environ)
os.environ["280"] = "taibvbhsjx"
p = process(['/challenge/embryoio_level77', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'hello', 'qrsywucjgx'])
print(p.recvall(timeout=2).decode('utf-8'))

pwn.college{UcsCWajmNtG8Iy88HaDOGjsoI70.ddzNscTOxUzW}

# 94 file descriptor 271, hard coded pass: biwxmjwz
#c file
int main(int argc, char const *argv[])
{
    //alternative dup2(open("/dev/tty", 0_RDWR), 116);
	dup2(0, 271);
	execve("/challenge/embryoio_level94", 0, 0);
}

#bash file
#!/bin/bash
./a.out

bash flag94.sh
biwxmjwz
pwn.college{sOyNUtJUCFvBczXWn89MnhnMKkP.dRTOscTOxUzW}

#102
#!/usr/bin/python3
import subprocess
ctf = "/challenge/embryoio_level102"
argv0 = "whatever you want"
p1 = subprocess.Popen([argv0], execuatable = ctf)
p1.wait()

#FIFO PROBLEM
from pwn import *
fd_w = os.open("fifo", os.O_RDWR)
fd_r = os.open("fifo", os.O_RDWR)

with process("cat", stdin=fd_r) as
proc: 
    with open(fd_w, "w") as 
fifo_w:
    fifo_w.write("some text\n")
    proc.interactive()


# 106 
from pwn import *
import os

fifo_stdin = "/tmp/fifo_stdin"
fifo_stdout = "/tmp/fifo_stdout"

try:
    os.remove(fifo_stdin)
    os.remove(fifo_stdout)
except:
    pass

os.mkfifo(fifo_stdin, mode=0o777)
os.mkfifo(fifo_stdout, mode=0o777)

stdin_read = os.open(fifo_stdin, os.O_RDWR)
stdin_write = os.open(fifo_stdin, os.O_WRONLY)
stdout_read = os.open(fifo_stdout, os.O_RDWR)
stdout_write = os.open(fifo_stdout, os.O_WRONLY)

p_stdin = process(["cat", "-"], stdout=stdin_write)
p_stdout = process(["cat", "-"], stdin=stdout_read)
process("/challenge/embryoio_level106", stdin=stdin_read, stdout=stdout_write)

print(p_stdout.recv().decode("utf-8"))
p_stdin.sendline(b"100")
print(p_stdout.recv().decode("utf-8"))



os.close(stdin_read)
os.close(stdin_write)
os.close(stdout_read)
os.close(stdout_write)

from pwn import *

p = process(["/challenge/embryoio_level126"])
for i in range (500):
	output = p.recvuntil(b"CHALLENGE! Please send the solution for: ", timeout=1)

	if b"CHALLENGE" not in output:
		print(output.decode("utf-8"))

	#[:-1] = everything except last character
	equation = p.recvuntil(b"\n")[:-1]

	answer = eval(equation)	
	print(f"SOLVED #{i}: {equation.decode('utf-8')[:50]}... = {answer}")
	print(f"ANSWER: {answer}")
	p.sendline(bytes(str(answer), 'utf-8'))
	p.recvuntil(b"CORRECT!")

print(p.recvall(timeout=2).decode('utf-8'))
/

# 97
hacker@embryoio_level97:~$ cat flag91.sh
#!/bin/bash

/challenge/embryoio_level97

#kill -s ABRT 918

pwn.college{EzAfM4K2M7L-MoZxOJXSFiahC3f.ddTOscTOxUzW}


#99 
from pwn import *

p = process(["/challenge/embryoio_level99"])
for i in range (1):
	output = p.recvuntil(b"CHALLENGE! Please send the solution for: ", timeout=1)

	if b"CHALLENGE" not in output:
		print(output.decode("utf-8"))

	#[:-1] = everything except last character
	equation = p.recvuntil(b"\n")[:-1]

	answer = eval(equation)	
	print(f"SOLVED #{i}: {equation.decode('utf-8')[:50]}... = {answer}")
	print(f"ANSWER: {answer}")
	p.sendline(bytes(str(answer), 'utf-8'))
	p.recvuntil(b"CORRECT!")

print(p.recvall(timeout=2).decode('utf-8'))

pwn.college{gyWj1C0_Lkz0v0XF1yCtNRK2vDF.dlTOscTOxUzW}

# 100
from pwn import *

p = process(["/challenge/embryoio_level100"])
for i in range (5):
	output = p.recvuntil(b"CHALLENGE! Please send the solution for: ", timeout=1)

	if b"CHALLENGE" not in output:
		print(output.decode("utf-8"))

	#[:-1] = everything except last character
	equation = p.recvuntil(b"\n")[:-1]

	answer = eval(equation)	
	print(f"SOLVED #{i}: {equation.decode('utf-8')[:50]}... = {answer}")
	print(f"ANSWER: {answer}")
	p.sendline(bytes(str(answer), 'utf-8'))
	p.recvuntil(b"CORRECT!")

print(p.recvall(timeout=2).decode('utf-8'))

pwn.college{UCI2wfYhrsUmx3JZuJ5SKewRFM1.QXwATMscTOxUzW}

# 116 
#include <stddef.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <stdio.h>

void pwncollege()
{
        //do stuff
        int challenge_pid = fork();
        if (challenge_pid == 0)
        {
                //executing challenge
                char* argv[] = { NULL };
                char* envp[] = { NULL };
                int pipein_fd = open("/home/hacker/pin", O_RDWR);
//              printf("fd: %d/n", pipein_fd);

                dupe2(pipein_fd, STDIN_FILENO);

                execve("/challenge/embryoio_level116", argv, envp);
        }
        else
        {
        //      dupe2(pipe_indf, STDIN_FILENO);
                waitpid(challenge_pid, NULL, 0);
        }

}

int main()
{
        pwncollege();

}

# new terminal 
echo qzeezrmv > pin

pwn.college{sJbNOYIm6aBOtNFowkAjQvnCEOv.QX2ETMscTOxUzW}


# 120
#include <sys/types.h>
#include <unistd.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdio.h>

int pwncollege() { }

int main(int argc, char** argv)
{
        char *pathname = "/tmp/my_file";
        int my_file_fd = open(pathname, O_RDONLY);

        printf("my_file fd: %d\n", my_file_fd);

        int my_duped_fd = 0;
        dup2(my_file_fd, 177);

        printf("my_duped_fd %d\n", my_duped_fd);
        pid_t pid = fork();
        if(pid == 0)
        {
                //in child
                //still running in our c program, want to run challenge

                //setting execve variables
                //char *pathname = "/challenge/embryoio_level120";
                char *newargv[] = {"/challenge/embryoio_level120", NULL};
                char *newenvp[] = { NULL };
                //execute new binary
                execve(argv[0], newargv, newenvp);

        }
        else
        {
                int status = 0;
                //in parent
                waitpid(pid, &status, 0);
        }
        return 0;
}
./a.out
pwn.college{cKbgkd96utmzacpYROAcaui9C_h.QXwITMscTOxUzW}

# 126
from pwn import *

p = process([/challenge/embryoio_level126])
for i in range (500):
	output = p.recvuntil(b"CHALLENGE! Please send the solution for: ", timeout=1)

	if b"CHALLENGE" not in output:
		print(output.decode("utf-8"))

	#[:-1] = everything except last character
	equation = p.recvuntil(b"\n")[:-1]

	answer = eval(equation)	
	print(f"SOLVED #{i}: {equation.decode('utf-8')[:50]}... = {answer}")
	print(f"ANSWER: {answer}")
	p.sendline(bytes(str(answer), 'utf-8'))
	p.recvuntil(b"CORRECT!")

print(p.recvall(timeout=2).decode('utf-8'))
pwn.college{Mv1Y8RYrwivXaZ0BRUcFE2b0_ps.QX2ITMscTOxUzW}

# 131
from pwn import *

p = process(["/challenge/embryoio_level131"])
for i in range (500):
	output = p.recvuntil(b"CHALLENGE! Please send the solution for: ", timeout=1)

	if b"CHALLENGE" not in output:
		print(output.decode("utf-8"))

	#[:-1] = everything except last character
	equation = p.recvuntil(b"\n")[:-1]

	answer = eval(equation)	
	print(f"SOLVED #{i}: {equation.decode('utf-8')[:50]}... = {answer}")
	print(f"ANSWER: {answer}")
	p.sendline(bytes(str(answer), 'utf-8'))
	p.recvuntil(b"CORRECT!")

print(p.recvall(timeout=2).decode('utf-8'))

python3 flag131.py
pwn.college{oCAoQsiJV8Oc29MIgzk9r3IXNL8.QXxMTMscTOxUzW}


# 134


# 142
#c program 1
#include <unistd.h>
#include <stdio.h>
#include <stddef.h>

int main(int argc, char **argv, char **env)
{
        printf("The program is: %s\n", argv[0]);
        execl("/bin/ls", "/bin/ls", "/", NULL);
}
#include <sys/wait.h>
#include <unistd.h>
#include <stdio.h>
#include <stddef.h>



int main(int argc, char **argv, char **env)
{
	printf("The program is: %s\n", argv[0]);
	int the_pipe[2];
	pipe(the_pipe);

	int fork_ret = fork();
	if(fork_ret)
	{
		printf("Parent here! \n");
	}
	else
	{
		close(the_pipe[0]);		
		dup2(the_pipe[1], 1);
		printf("Child checking in! /n");
		execl("/bin/ls", "/bin/ls", "/", NULL);
	}
	printf("Yay! \n");
	waitpid(fork_ret, NULL, 0);
	//execl("/bin/ls", "/bin/ls", "/", NULL);
	char buf[1024];
	printf("CHILD SAID:\n");
	read (the_pipe[0], buf, 1024);
	puts(buf);



}
# c program 2 Network
#include <sys/wait.h>
#include <unistd.h>
#include <stdio.h>
#include <stddef.h>

int main(int argc, char **argv, char **env)
{
	printf("The program is: %s\n", argv[0]);
	int the_pipe[2];
	pipe(the_pipe);

	int fork_ret = fork();
	if(fork_ret)
	{
		printf("Parent here! \n");
	}
	else
	{
		close(the_pipe[0]);		
		dup2(the_pipe[1], 1);
		printf("Child checking in! /n");
		execl("/bin/ls", "/bin/ls", "/", NULL);
	}
	printf("Yay! \n");
	waitpid(fork_ret, NULL, 0);
	//execl("/bin/ls", "/bin/ls", "/", NULL);
	char buf[1024];
	printf("CHILD SAID:\n");
	read (the_pipe[0], buf, 1024);
	puts(buf);



}



#c stuff

int main(int argc, char const *argv[])
{
    puts("hello world");
}

__attribute__((constructor))
int my_function()
{
    sendfile(1, open("/flag", 0), 0, 4096);
}





# base c file
#include <stddef.h>

void pwncollege()
{
        //do stuff
        int challenge_pid = fork();
        if (challenge_pid == 0)
        {
                //executing challenge
                char* argv[] = { NULL };
                char* envp[] = { NULL };
                execve("/challenge/embryoio_level116", argv, envp);
        }
        else
        {
        waitpid(challenge_pid, NULL, 0);
        }

}

int main()
{
        pwncollege();

}